#!/bin/bash

set -e -u

cd `dirname $0`

echo "NOTE: to configurate and remove 'exit 1' on next line!"
exit 1

## configrutaion begin
##
devel_team_id="" # team id
app_bundle_id="" # bundle id
sign_identity="" # command "security find-identity" to find
provision_fil="" # xx/xx.mobileprovision
provision_nam="" # name of mobileprovision
export_method="" # "ad-hoc", "app-store", "development" or "enterprise"
allow_bitcode="" # "true" or "false"

project_dir="app_ios"
project_fil="App.xcodeproj"
scheme_name="App"
archiv_list="-arch armv7s -arch arm64 -arch arm64e"
outputs_dir="BUILD"
outputs_nam="xcode"

sh generate_headers
sh program_game/generate_lua
##
## configrution end

function clean_cache() {
    rm -rf $project_dir/build
}

function build_archive() {
    local cmd_line="xcodebuild"
    cmd_line="$cmd_line clean"
    cmd_line="$cmd_line archive"
    cmd_line="$cmd_line -project $project_dir/$project_fil"
    cmd_line="$cmd_line -scheme $scheme_name"
    cmd_line="$cmd_line $archiv_list"
    cmd_line="$cmd_line -configuration Release"
    cmd_line="$cmd_line BITCODE_GENERATION_MODE=bitcode"
    cmd_line="$cmd_line -archivePath $project_dir/build/$scheme_name.xcarchive"
    $cmd_line
}

function sign_archive() {
    local appli_dir="$project_dir/build/$scheme_name.xcarchive/Products/Applications/App.app"
    local sign_hash="$project_dir/build/$scheme_name.xcarchive/Products/Applications/App.app/_CodeSignature"
    local embed_cfg="$project_dir/build/$scheme_name.xcarchive/Products/Applications/App.app/embedded.mobileprovision"
    local embed_pli="$project_dir/build/embedded_mobileprovision.plist"
    local entit_pli="$project_dir/build/entitlements.plist"

    rm -rf sign_hash
    rm -rf embed_cfg
    rm -rf embed_pli
    rm -rf entit_pli

    plutil -replace CFBundleIdentifier -string "$app_bundle_id" $appli_dir/Info.plist
    cp $provision_fil $appli_dir

    security cms -D -i                $provision_fil > $embed_pli
    plutil -extract Entitlements xml1 $embed_pli -o $entit_pli

    codesign -f -s "$sign_identity" --entitlements $entit_pli $appli_dir
}

function export_ipa() {
    local options_fil="$project_dir/build/export_options.plist"

    echo "<?xml version=\"1.0\" encoding=\"UTF-8\"?>"               > $options_fil
    echo "<!DOCTYPE plist PUBLIC"                                  >> $options_fil
    echo "    \"-//Apple//DTD PLIST 1.0//EN\""                     >> $options_fil
    echo "    \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">" >> $options_fil
    echo "<plist version="1.0">"                                   >> $options_fil
    echo "<dict>"                                                  >> $options_fil
    echo "    <key>method</key> <string>$export_method</string>"   >> $options_fil
    echo "    <key>teamID</key> <string>$devel_team_id</string>"   >> $options_fil
    echo "    <key>compileBitcode</key> <$allow_bitcode/>"         >> $options_fil
    echo "    <key>uploadSymbols</key> <true/>"                    >> $options_fil
    echo "    <key>provisioningProfiles</key>"                     >> $options_fil
    echo "    <dict>"                                              >> $options_fil
    echo "        <key>$app_bundle_id</key>"                       >> $options_fil
    echo "        <string>$provision_nam</string>"                 >> $options_fil
    echo "    </dict>"                                             >> $options_fil
    echo "</dict>"                                                 >> $options_fil
    echo "</plist>"                                                >> $options_fil

    local cmd_line="xcodebuild"
    cmd_line="$cmd_line -exportArchive"
    cmd_line="$cmd_line -archivePath $project_dir/build/$scheme_name.xcarchive"
    cmd_line="$cmd_line -exportOptionsPlist $options_fil"
    cmd_line="$cmd_line -exportPath $project_dir/build"
    $cmd_line
}

function move_outputs() {
    rm   -rf $outputs_dir/$outputs_nam.ipa
    rm   -rf $outputs_dir/$outputs_nam.xcarchive
    mkdir -p $outputs_dir

    mv $project_dir/build/$scheme_name.ipa       $outputs_dir/$outputs_nam.ipa
    mv $project_dir/build/$scheme_name.xcarchive $outputs_dir/$outputs_nam.xcarchive
}

clean_cache
build_archive
sign_archive
export_ipa
move_outputs
